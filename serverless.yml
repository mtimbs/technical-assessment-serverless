service:
  name: fleet-test

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-iam-roles-per-function:
    defaultInherit: true # Each function will inherit the service level roles too.
  prune:
    automatic: true
    number: 3



plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-create-global-dynamodb-table
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs12.x
  frameworkVersion: ‘1.66.0’
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-2'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

functions:
  ingest:
    handler: src/inbound.handle
    # TODO: trigger this based on some event
    events:

  getDataUsage:
    handler: src/outbound.handle
    events:
      - http:
          path: account/{accountId}/usage
          method: get
          cors: true

resources:
  Resources:
    # SNS Topic for entry into service
    DataReceivedEvent:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-log-data-received-event

    # Database to store the log data
    Database:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:service}-${self:provider.stage}-database
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
